# --------------------------------------------------------------------------------------------------
# Copyright (c) Lukas Vik. All rights reserved.
#
# This file is part of the tsfpga project, a project platform for modern FPGA development.
# https://tsfpga.com
# https://github.com/tsfpga/tsfpga
# --------------------------------------------------------------------------------------------------

import re


class TimingParser:
    """
    Used for parsing the ``report_timing`` report generated by Vivado.
    """

    @staticmethod
    def get_slack_ns(report: str) -> float:
        """
        Takes a timing report as a string and returns the ``slack`` number in nanoseconds (ns).

        For example:

        ```
        -------------------------------------------------------------------
                               required time                          2.739
                               arrival time                          -6.715
        -------------------------------------------------------------------
                               slack                                 -3.976
        ```

        Note that for a design where no clock is created, there is no line like this,
        and an exception is raised.

        Arguments:
            report: A string containing the entire Vivado timing report.
        """
        slack_matches = re.findall(r"^[\s]*slack\s*([-\d\.]+)(\s|$)", report, re.MULTILINE)

        if len(slack_matches) == 0:
            raise FoundNoSlackError
        if len(slack_matches) > 1:
            raise FoundMultipleSlackError

        return float(slack_matches[0][0])


class FoundNoSlackError(Exception):
    pass


class FoundMultipleSlackError(Exception):
    pass
