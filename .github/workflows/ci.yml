name: ci

on:
  # Run when a pull request is opened or updated.
  pull_request:
  # Add possibility of running manually from webpage.
  workflow_dispatch:
  # Run from main when a pull request is merged.
  push:
    branches:
      - main
  # Run nightly at 20:45 UTC.
  schedule:
  - cron: 45 20 * * *

jobs:

  # ------------------------------------------------------------------------------
  # Run all Python-based tests.

  pytest:
    name: Run Python tests
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        py: ['3.9', '3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py }}
        cache: pip
        cache-dependency-path: tsfpga/requirements_develop.txt

    - name: Install Python packages
      run: |
        python3 -m pip install GitPython pytest rtoml vunit-hdl

    - name: Clone dependency repos
      run: |
        git clone --depth 1 --single-branch --branch main https://github.com/hdl-registers/hdl-registers.git ../../hdl-registers/hdl-registers

    # Run only the UNIT tests on most Python versions in the matrix.
    # This is very fast (2-3 s).
    - name: Run unit tests
      if: matrix.os != 'ubuntu-latest' || matrix.py != '3.9'
      run: |
        python3 -m pytest --verbose tsfpga

    # On one Python version however, we run ALL the Python-based tests, which requires a few more
    # dependencies, and then we collect coverage from this run.
    - name: Install further Python packages
      if: matrix.os == 'ubuntu-latest' && matrix.py == '3.9'
      run: |
        python3 -m pip install \
          black \
          flake8 \
          mypy \
          pybadges \
          pylint \
          pytest-cov \
          pytest-xdist

    # Run ALL tests, including unit, lint and functional ones.
    # The execution time goes from 1:13 -> 0:50 when two threads are used.
    - name: Run all tests
      if: matrix.os == 'ubuntu-latest' && matrix.py == '3.9'
      run: |
        python3 -m pytest \
          --verbose \
          --numprocesses 2 \
          --cov tsfpga \
          --cov-report xml:generated/python_coverage.xml \
          --cov-report html:generated/python_coverage_html \
          --ignore tests/functional/vivado \
          --ignore tests/functional/commercial_simulators \
          tsfpga \
          tests

    - name: Upload coverage artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.py == '3.9'
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: generated/python_coverage*


  # ------------------------------------------------------------------------------
  # Build HTML documentation for website.

  build_doc:
    name: Build HTML documentation
    needs: pytest
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: pip
        cache-dependency-path: tsfpga/requirements_develop.txt

    - name: Install Python packages
      run: |
        pip install \
          GitPython \
          pybadges \
          rtoml \
          setuptools \
          sphinx \
          sphinx-rtd-theme \
          sphinx_sitemap \
          vunit-hdl

    - name: Clone dependency repos
      run: |
        git clone --depth 1 --single-branch --branch main \
          https://github.com/hdl-modules/hdl-modules.git ../../hdl-modules/hdl-modules
        git clone --depth 1 --single-branch --branch main \
          https://github.com/hdl-registers/hdl-registers.git ../../hdl-registers/hdl-registers

    - name: Download coverage artifacts
      uses: actions/download-artifact@v3
      with:
        name: coverage
        path: generated

    - name: Run job
      run: |
        # Without tags, 'build_docs.py' can not find all git tags fo release history.
        # Note that 'fetch-tags: true' on the checkout actions did not work (2023-11-29).
        git fetch --all --tags
        python3 tools/build_docs.py

    - name: Configure Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Upload Pages Artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v2
      with:
        path: generated/sphinx_html


  # ------------------------------------------------------------------------------
  # Deploy the previously built HTML to GitHub Pages.

  deploy_pages:
    name: Deploy website to pages
    if: github.ref == 'refs/heads/main'
    # Only do deployment if everything else has passed.
    needs: [pytest, build_doc, simulate, build_pypi]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3


  # ------------------------------------------------------------------------------
  # Simulate some of the example code.

  simulate:
    name: Simulate
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: pip
        cache-dependency-path: tsfpga/requirements_develop.txt

    - name: Install Python packages
      run: |
        python3 -m pip install \
          GitPython \
          rtoml \
          vunit-hdl

    - name: Setup GHDL
      uses: ghdl/setup-ghdl-ci@nightly

    - name: Clone dependency repos
      run: |
        git clone --depth 1 --single-branch --branch main \
          https://github.com/hdl-modules/hdl-modules.git ../../hdl-modules/hdl-modules
        git clone --depth 1 --single-branch --branch main \
          https://github.com/hdl-registers/hdl-registers.git ../../hdl-registers/hdl-registers

    - name: Run minimal simulation
      if: github.ref != 'refs/heads/main'
      run: |
        git fetch
        python3 tsfpga/examples/simulate.py --num-threads 2 --vivado-skip --vcs-minimal

    - name: Run full simulation
      if: github.ref == 'refs/heads/main'
      run: |
        python3 tsfpga/examples/simulate.py --num-threads 2 --vivado-skip --minimal


  # ------------------------------------------------------------------------------
  # Build the Python release package for PyPI.

  build_pypi:
    name: Build PyPI release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: tsfpga/requirements_develop.txt

      - name: Install Python packages
        run: |
          python3 -m pip install build

      - name: Run job
        run: python3 -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pypi_dist
          path: dist
